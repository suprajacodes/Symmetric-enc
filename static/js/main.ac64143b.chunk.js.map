{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","text","setText","useState","encryptedData","setEncryptedData","error","setError","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","console","log","response","axios","post","data","type","value","onChange","target","placeholder","cipher","iv","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"sMAoEeA,MAhEf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAE1BC,EAAeC,GAAoBF,mBAAS,OAC5CG,EAAOC,GAAYJ,mBAAS,MAsBnC,OACEK,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,UAAQF,UAAU,aAAYC,SAC5BC,cAAA,MAAAD,SAAI,uBAENF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBF,eAAA,QAAMI,SA1BSC,UACnBC,EAAEC,iBACFC,QAAQC,IAAI,wCAAyChB,GACrD,IACE,MAAMiB,QAAiBC,IAAMC,KAAK,gCAAiC,CAAEnB,SACrEe,QAAQC,IAAI,kCAAmCC,EAASG,MACpDH,EAASG,KAAKf,OAChBC,EAASW,EAASG,KAAKf,OACvBD,EAAiB,QAEjBA,EAAiBa,EAASG,MAC1Bd,EAAS,MAEb,CAAE,MAAOD,GACPU,QAAQV,MAAM,yBAA0BA,GACxCC,EAAS,oEACTF,EAAiB,KACnB,GASiCK,SAAA,CAO3BC,cAAA,SACEW,KAAK,OACLC,MAAOtB,EACPuB,SAAWV,GAAMZ,EAAQY,EAAEW,OAAOF,OAClCG,YAAY,0BAEdf,cAAA,UAAQW,KAAK,SAAQZ,SAAC,eAEvBJ,GACCK,cAAA,OAAKF,UAAU,QAAOC,SACpBC,cAAA,KAAAD,SAAIJ,MAGPF,GACCI,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,MAAAD,SAAI,mBACJF,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,YAAgB,IAAEN,EAAcuB,UAC3CnB,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,QAAY,IAAEN,EAAcwB,cAMnD,EC9DAC,IAASC,OACPnB,cAACoB,IAAMC,WAAU,CAAAtB,SACfC,cAACX,EAAG,MAENiC,SAASC,eAAe,Q","file":"static/js/main.ac64143b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  // const [apiKey, setApiKey] = useState('');\n  const [encryptedData, setEncryptedData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('Sending request to backend with text:', text);\n    try {\n      const response = await axios.post('http://localhost:5000/encrypt', { text });\n      console.log('Received response from backend:', response.data);\n      if (response.data.error) {\n        setError(response.data.error);\n        setEncryptedData(null);\n      } else {\n        setEncryptedData(response.data);\n        setError(null);\n      }\n    } catch (error) {\n      console.error('Error encrypting data:', error);\n      setError('Failed to encrypt data. Please check your API key and try again.');\n      setEncryptedData(null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Encrypt a String</h1>\n      </header>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n          {/* <input \n            type=\"text\" \n            value={apiKey} \n            onChange={(e) => setApiKey(e.target.value)} \n            placeholder=\"Enter API key\" \n          /> */}\n          <input \n            type=\"text\" \n            value={text} \n            onChange={(e) => setText(e.target.value)} \n            placeholder=\"Enter text to encrypt\" \n          />\n          <button type=\"submit\">Encrypt</button>\n        </form>\n        {error && (\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n        )}\n        {encryptedData && (\n          <div className=\"result\">\n            <h2>Encrypted Data</h2>\n            <p><strong>Cipher:</strong> {encryptedData.cipher}</p>\n            <p><strong>IV:</strong> {encryptedData.iv}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}